1.	The operator+ returns a Fraction object. Explain why this operator should not return a reference to a Fraction object.
The + operator use it's local variable which is only used in the function.
So after the function has done, the variable would be terminated because its life cycle is done.
Therefore, if we return not the copy but the reference of the variable, 
It will return a reference of terminated variable. Then it will have garbage values in it.
That is the reason why we should return a Fraction object not the reference.

2.	List the temporary objects in the tester module.
- every functions' "result"
- in gcd() function, "mn", "mx", "g_c_d" and "found"
- in reduce() function, "Ngcd"
- every operator functions' "num" and "denom"
- every operator functions' return object of "Function(num, denom)"

3.	List the simplifications that you made to your class to minimize duplication.
- I used isEmpty() function when I should check if it's safe state
- I used operator+ when I was working on declaring operator+= function
- I used reduce() function in constructor, so that I don't have to use anywhere else

4.	Explain what you have learned in this workshop.
- How to overload binary operator
- Why I can't use non-const function in const function
- How to declare a private function and use it
- Reduce duplication by using functions